{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","params","location","useLocation","match","useRouteMatch","getSingleQuote","quoteDetail","isCommentsShown","pathname","path","exact","to","url"],"mappings":"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","file":"static/js/4.0b869d0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { useEffect, useRef } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\n\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments were Added Yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\nimport {\n  useParams,\n  Route,\n  Link,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n  const params = useParams();\n\n  const location = useLocation();\n\n  const match = useRouteMatch();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: quoteDetail,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!quoteDetail.text || !quoteDetail.author)) {\n    return <h1>No Quote Detail!</h1>;\n  }\n\n  const isCommentsShown = location.pathname === `${match.path}/comments`;\n\n  //   const quote = quoteDetail.find((item) => item.id === params.quoteId);\n\n  //   if (!quote) {\n  //     return <h1>No quote found!</h1>;\n  //   }\n\n  return (\n    <section>\n      <HighlightedQuote text={quoteDetail.text} author={quoteDetail.author} />\n\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link\n            className=\"btn--flat\"\n            to={!isCommentsShown ? `${match.url}/comments` : match.url}\n          >\n            {\" \"}\n            {!isCommentsShown ? \"Load\" : \"Hide\"} Comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`} exact>\n        <Comments />\n      </Route>\n    </section>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}